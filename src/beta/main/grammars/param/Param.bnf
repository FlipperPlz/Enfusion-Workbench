{
    parserClass="com.flipperplz.enfusionWorkbench.languages.param.parser.ParamParser"

    extends="com.flipperplz.enfusionWorkbench.languages.param.psi.impl.ParamElementImpl"
    implements="com.flipperplz.enfusionWorkbench.languages.param.psi.ParamElement"

    psiClassPrefix="GeneratedParam"
    psiImplClassSuffix="impl"
    psiPackage="com.flipperplz.enfusionWorkbench.languages.param.psi"
    psiImplPackage="com.flipperplz.enfusionWorkbench.languages.param.psi.impl"

    elementTypeHolderClass="com.flipperplz.enfusionWorkbench.languages.param.psi.ParamTypes"
    elementTypeClass="com.flipperplz.enfusionWorkbench.languages.param.psi.required.ParamElementType"
    tokenTypeClass="com.flipperplz.enfusionWorkbench.languages.param.psi.required.ParamTokenType"

    tokens = [
        SINGLE_LINE_COMMENT      = 'regexp://.*';
        EMPTY_DELIMITED_COMMENT  = 'regexp:/\*\*?/';
        DELIMITED_COMMENT        = 'regexp:/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+/'
        ABS_IDENTIFIER           =  'regexp:[a-zA-Z_][a-zA-Z0-9_]*';
        ABS_STRING               =  'regexp:"(""|.)*"';
        ABS_NUMERIC              =  'regexp:(-?[0-9]+(.[0-9]+)?([eE][-+]?[0-9]+)?|0x[a-fA-F0-9]+)';
        ABS_WHITE_SPACE          = 'regexp:[\t\s]+';

        OP_ASSIGN                = 'regexp:='
        OP_ADD_ASSIGN            = 'regexp:/+='
        OP_SUB_ASSIGN            = 'regexp:-='

    ]
    generate=[tokenAccessors="yes"]

    implements('classDeclaration|file')='com.flipperplz.enfusionWorkbench.languages.param.psi.ParamScope'
    implements('classDeclaration|assignmentStatement|deleteStatement')='com.flipperplz.enfusionWorkbench.languages.param.psi.ParamStatement'

    mixin('deleteStatement')='com.flipperplz.enfusionWorkbench.languages.param.psi.impl.mixins.ParamStatementMixin'
    mixin('classDeclaration')='com.flipperplz.enfusionWorkbench.languages.param.psi.impl.mixins.ParamClassMixin'
    mixin('assignmentStatement')='com.flipperplz.enfusionWorkbench.languages.param.psi.impl.mixins.ParamAssignmentMixin'
    mixin('identifier')='com.flipperplz.enfusionWorkbench.languages.param.psi.impl.mixins.ParamIdentifierMixin'

    extends('classDeclaration|assignmentStatement|deleteStatement')=statement
    extends('literal|literalArray')=arrayElement
    extends('paramString|paramNumeric')=literal

}

file ::= statement* enumDeclaration? { pin=1 }

classDeclaration ::= 'class' identifier regularClassDecl? ';' { pin=2 }

assignmentStatement ::= identifier (arrayAssignment | valueAssignment) ';' { pin=1 }

deleteStatement ::= 'delete' identifier ';' { pin=1 }

paramNumeric ::= ABS_NUMERIC
paramString ::= ABS_STRING
identifier ::= ABS_IDENTIFIER

literalArray ::= '{' arrayElement (',' (arrayElement | &'}'))* '}' { pin(".*")=1 }

enumDeclaration ::= 'enum' '{' enumValue* '}' ';' { pin=2 }

literal ::= paramString | paramNumeric

arrayElement ::= literal | literalArray

statement ::= classDeclaration | deleteStatement | assignmentStatement { recoverWhile="statementRecover" }

private arrayAssignment ::= '[' ']' (
        OP_ASSIGN  |
        OP_ADD_ASSIGN |
        OP_SUB_ASSIGN
    ) literalArray
{
    pin=3
};

private valueAssignment ::= '=' literal { pin=1 };

private enumValue ::= identifier ('=' ABS_NUMERIC)? { pin=1 }

private statementRecover ::= !(';' | identifier)

private regularClassDecl ::= (':' identifier)? '{' statement* '}' { pin=2 }






